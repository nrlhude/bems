import React, { useState, useEffect } from 'react';
import { Box, TextField, Typography, Button, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Paper } from "@mui/material";
import axios from 'axios';

const AddClassReport = () => {
    const [activities, setActivities] = useState([]);
    const [formData, setFormData] = useState({
        tarikh: '',
        masa: '',
        kehadiranMurid: '',
        kelas: '',
        tajuk: '',
        tema: '',
        ulasanKeseluruhan: '',
        cadanganPenambahbaikan: '',
        dilaporkanOleh: '',
        senaraiAktiviti: [{ masa: '', aktiviti: '' }],
    });
    const [kelasEnrolment, setKelasEnrolment] = useState([]);

    useEffect(() => {
        const fetchKelas = async () => {
            try {
                const response = await axios.get('http://127.0.0.1:8000/api/kelas-enrolment/');
                setKelasEnrolment(response.data);
            } catch (error) {
                console.error('Error fetching kelas data:', error);
            }
        };
        const fetchActivities = async () => {
            try {
                const response = await axios.get(`http://127.0.0.1:8000/api/senarai-aktiviti/`);
                setActivities(response.data);
            } catch (error) {
                console.error('Error fetching activities:', error);
            }
        };

        fetchActivities();
        fetchKelas();
    }, []);

    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setFormData({ ...formData, [name]: value });
    };

    const handleActivityChange = (e, index) => {
        const { value } = e.target;
        const updatedActivities = [...formData.senaraiAktiviti];
        updatedActivities[index].aktiviti = value;
        setFormData({ ...formData, senaraiAktiviti: updatedActivities });
    };

    const handleMasaChange = (e, index) => {
        const { value } = e.target;
        const updatedActivities = [...formData.senaraiAktiviti];
        updatedActivities[index].masa = value;
        setFormData({ ...formData, senaraiAktiviti: updatedActivities });
    };

    const handleAddActivity = () => {
        setFormData({ ...formData, senaraiAktiviti: [...formData.senaraiAktiviti, { masa: '', aktiviti: '' }] });
    };

    const handleRemoveActivity = (index) => {
        const updatedActivities = [...formData.senaraiAktiviti];
        updatedActivities.splice(index, 1);
        setFormData({ ...formData, senaraiAktiviti: updatedActivities });
    };

    const handleFormSubmit = async () => {
        try {
            // Perform input validation before submitting the form
            if (!formData.tarikh || !formData.masa || !formData.kehadiranMurid || !formData.kelas || !formData.tajuk || !formData.tema || !formData.senaraiAktiviti.every(activity => activity.masa && activity.aktiviti)) {
                alert('Please fill in all required fields.');
                return;
            }
            const response = await axios.post('http://127.0.0.1:8000/api/report-class/', formData);
            console.log(response.data);
            
            // Add any success message or navigation logic here
        } catch (error) {
            console.error('Error creating class report:', error);
            // Add error handling logic here
            alert('Error creating class report. Please try again later.');
        }
    };


    return (
        <Box m="20px">
            <Typography variant="h5" gutterBottom component="div">
                Add Class Report
            </Typography>
            
            <Box boxShadow={10} p="10px" mt="20px">
                <Box m="0 0 0 20px">
                    {/* Input fields */}
                    <TextField
                        label="Tarikh"
                        type='date'
                        name="tarikh"
                        value={formData.tarikh}
                        onChange={handleInputChange}
                        style={{margin: '10px', width: '23%'}}
                    />
                    <TextField
                        label="Masa"
                        name="masa"
                        type='time'
                        value={formData.masa}
                        onChange={handleInputChange}
                        style={{margin: '10px', width: '23%'}}
                    />
                    <TextField
                        label="Kehadiran Murid"
                        name="kehadiranMurid"
                        value={formData.kehadiranMurid}
                        onChange={handleInputChange}
                        style={{margin: '10px', width: '23%'}}
                    />
                        
                    <TextField
                        label="Kelas"
                        name="kelas"
                        value={formData.kelas}
                        onChange={handleInputChange}
                        style={{margin: '10px', width: '23%'}}
                        select
                        SelectProps={{ native: true }}
                     >
                        <option value="">Kelas</option>
                                    {kelasEnrolment.map(kelas => (
                                        <option key={kelas.kelasenroll_id} value={kelas.kelas_name}>{kelas.kelas_name}</option>
                                    ))}
                    </TextField>
                    <TextField
                        label="Tajuk"
                        name="tajuk"
                        value={formData.tajuk}
                        onChange={handleInputChange}
                        style={{margin: '10px', width: '23%'}}
                    />
                    <TextField
                        label="Tema"
                        name="tema"
                        value={formData.tema}
                        onChange={handleInputChange}
                        style={{margin: '10px', width: '23%'}}
                    />
                </Box>
            </Box>

            <Box>
                <Box boxShadow={15} p="10px" mt="25px">
                    <Box m="0 0 0 20px">
                        <Typography variant="h6" gutterBottom component="div">
                            Senarai Aktiviti
                        </Typography>
                    </Box>

                    <TableContainer component={Paper} mt="20px">
                        <Table sx={{ minWidth: 650 }} aria-label="simple table">
                            <TableHead>
                                <TableRow>
                                    <TableCell>No</TableCell>
                                    <TableCell>Masa</TableCell>
                                    <TableCell>Aktiviti</TableCell>
                                    <TableCell></TableCell>
                                </TableRow>
                            </TableHead>
                            <TableBody>
                                {formData.senaraiAktiviti.map((item, index) => (
                                    <TableRow key={index}>
                                        <TableCell>{index + 1}</TableCell>
                                        <TableCell>
                                            <TextField
                                                value={item.masa}
                                                onChange={(e) => handleMasaChange(e, index)}
                                            />
                                        </TableCell>
                                        <TableCell>
                                            <TextField
                                                value={item.aktiviti}
                                                onChange={(e) => handleActivityChange(e, index)}
                                            />
                                        </TableCell>
                                        <TableCell>
                                            <Button variant="contained" color="error" size="small" onClick={() => handleRemoveActivity(index)}>Remove</Button>
                                        </TableCell>
                                    </TableRow>
                                ))}
                            </TableBody>
                        </Table>
                    </TableContainer>
                    <Button variant="contained" color="primary" size="small" onClick={handleAddActivity}>Add Activity</Button>
                </Box>
            </Box>

            <Box display="flex" justifyContent="end" mt="20px" >
                <Button variant="contained" color="secondary"  size="small" onClick={handleFormSubmit}>Submit</Button>    
            </Box>
        </Box>
    );
};

export default AddClassReport;
